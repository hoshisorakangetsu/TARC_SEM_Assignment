/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CoursesDiplomaIndexImport } from './routes/courses/diploma/index'
import { Route as CoursesDegreeIndexImport } from './routes/courses/degree/index'
import { Route as CoursesDiplomaIdImport } from './routes/courses/diploma/$id'
import { Route as CoursesDegreeIdImport } from './routes/courses/degree/$id'

// Create Virtual Routes

const ResearchCenterLazyImport = createFileRoute('/researchCenter')()
const HighlightsLazyImport = createFileRoute('/highlights')()
const FacilitiesLazyImport = createFileRoute('/facilities')()
const ContactUsLazyImport = createFileRoute('/contactUs')()
const AchievementsLazyImport = createFileRoute('/achievements')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ResearchCenterLazyRoute = ResearchCenterLazyImport.update({
  path: '/researchCenter',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/researchCenter.lazy').then((d) => d.Route),
)

const HighlightsLazyRoute = HighlightsLazyImport.update({
  path: '/highlights',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/highlights.lazy').then((d) => d.Route))

const FacilitiesLazyRoute = FacilitiesLazyImport.update({
  path: '/facilities',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/facilities.lazy').then((d) => d.Route))

const ContactUsLazyRoute = ContactUsLazyImport.update({
  path: '/contactUs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contactUs.lazy').then((d) => d.Route))

const AchievementsLazyRoute = AchievementsLazyImport.update({
  path: '/achievements',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/achievements.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CoursesDiplomaIndexRoute = CoursesDiplomaIndexImport.update({
  path: '/courses/diploma/',
  getParentRoute: () => rootRoute,
} as any)

const CoursesDegreeIndexRoute = CoursesDegreeIndexImport.update({
  path: '/courses/degree/',
  getParentRoute: () => rootRoute,
} as any)

const CoursesDiplomaIdRoute = CoursesDiplomaIdImport.update({
  path: '/courses/diploma/$id',
  getParentRoute: () => rootRoute,
} as any)

const CoursesDegreeIdRoute = CoursesDegreeIdImport.update({
  path: '/courses/degree/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/achievements': {
      id: '/achievements'
      path: '/achievements'
      fullPath: '/achievements'
      preLoaderRoute: typeof AchievementsLazyImport
      parentRoute: typeof rootRoute
    }
    '/contactUs': {
      id: '/contactUs'
      path: '/contactUs'
      fullPath: '/contactUs'
      preLoaderRoute: typeof ContactUsLazyImport
      parentRoute: typeof rootRoute
    }
    '/facilities': {
      id: '/facilities'
      path: '/facilities'
      fullPath: '/facilities'
      preLoaderRoute: typeof FacilitiesLazyImport
      parentRoute: typeof rootRoute
    }
    '/highlights': {
      id: '/highlights'
      path: '/highlights'
      fullPath: '/highlights'
      preLoaderRoute: typeof HighlightsLazyImport
      parentRoute: typeof rootRoute
    }
    '/researchCenter': {
      id: '/researchCenter'
      path: '/researchCenter'
      fullPath: '/researchCenter'
      preLoaderRoute: typeof ResearchCenterLazyImport
      parentRoute: typeof rootRoute
    }
    '/courses/degree/$id': {
      id: '/courses/degree/$id'
      path: '/courses/degree/$id'
      fullPath: '/courses/degree/$id'
      preLoaderRoute: typeof CoursesDegreeIdImport
      parentRoute: typeof rootRoute
    }
    '/courses/diploma/$id': {
      id: '/courses/diploma/$id'
      path: '/courses/diploma/$id'
      fullPath: '/courses/diploma/$id'
      preLoaderRoute: typeof CoursesDiplomaIdImport
      parentRoute: typeof rootRoute
    }
    '/courses/degree/': {
      id: '/courses/degree/'
      path: '/courses/degree'
      fullPath: '/courses/degree'
      preLoaderRoute: typeof CoursesDegreeIndexImport
      parentRoute: typeof rootRoute
    }
    '/courses/diploma/': {
      id: '/courses/diploma/'
      path: '/courses/diploma'
      fullPath: '/courses/diploma'
      preLoaderRoute: typeof CoursesDiplomaIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/achievements': typeof AchievementsLazyRoute
  '/contactUs': typeof ContactUsLazyRoute
  '/facilities': typeof FacilitiesLazyRoute
  '/highlights': typeof HighlightsLazyRoute
  '/researchCenter': typeof ResearchCenterLazyRoute
  '/courses/degree/$id': typeof CoursesDegreeIdRoute
  '/courses/diploma/$id': typeof CoursesDiplomaIdRoute
  '/courses/degree': typeof CoursesDegreeIndexRoute
  '/courses/diploma': typeof CoursesDiplomaIndexRoute
}

interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/achievements': typeof AchievementsLazyRoute
  '/contactUs': typeof ContactUsLazyRoute
  '/facilities': typeof FacilitiesLazyRoute
  '/highlights': typeof HighlightsLazyRoute
  '/researchCenter': typeof ResearchCenterLazyRoute
  '/courses/degree/$id': typeof CoursesDegreeIdRoute
  '/courses/diploma/$id': typeof CoursesDiplomaIdRoute
  '/courses/degree': typeof CoursesDegreeIndexRoute
  '/courses/diploma': typeof CoursesDiplomaIndexRoute
}

interface FileRoutesById {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/achievements': typeof AchievementsLazyRoute
  '/contactUs': typeof ContactUsLazyRoute
  '/facilities': typeof FacilitiesLazyRoute
  '/highlights': typeof HighlightsLazyRoute
  '/researchCenter': typeof ResearchCenterLazyRoute
  '/courses/degree/$id': typeof CoursesDegreeIdRoute
  '/courses/diploma/$id': typeof CoursesDiplomaIdRoute
  '/courses/degree/': typeof CoursesDegreeIndexRoute
  '/courses/diploma/': typeof CoursesDiplomaIndexRoute
}

interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/achievements'
    | '/contactUs'
    | '/facilities'
    | '/highlights'
    | '/researchCenter'
    | '/courses/degree/$id'
    | '/courses/diploma/$id'
    | '/courses/degree'
    | '/courses/diploma'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/achievements'
    | '/contactUs'
    | '/facilities'
    | '/highlights'
    | '/researchCenter'
    | '/courses/degree/$id'
    | '/courses/diploma/$id'
    | '/courses/degree'
    | '/courses/diploma'
  id:
    | '/'
    | '/about'
    | '/achievements'
    | '/contactUs'
    | '/facilities'
    | '/highlights'
    | '/researchCenter'
    | '/courses/degree/$id'
    | '/courses/diploma/$id'
    | '/courses/degree/'
    | '/courses/diploma/'
  fileRoutesById: FileRoutesById
}

interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AchievementsLazyRoute: typeof AchievementsLazyRoute
  ContactUsLazyRoute: typeof ContactUsLazyRoute
  FacilitiesLazyRoute: typeof FacilitiesLazyRoute
  HighlightsLazyRoute: typeof HighlightsLazyRoute
  ResearchCenterLazyRoute: typeof ResearchCenterLazyRoute
  CoursesDegreeIdRoute: typeof CoursesDegreeIdRoute
  CoursesDiplomaIdRoute: typeof CoursesDiplomaIdRoute
  CoursesDegreeIndexRoute: typeof CoursesDegreeIndexRoute
  CoursesDiplomaIndexRoute: typeof CoursesDiplomaIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  AchievementsLazyRoute: AchievementsLazyRoute,
  ContactUsLazyRoute: ContactUsLazyRoute,
  FacilitiesLazyRoute: FacilitiesLazyRoute,
  HighlightsLazyRoute: HighlightsLazyRoute,
  ResearchCenterLazyRoute: ResearchCenterLazyRoute,
  CoursesDegreeIdRoute: CoursesDegreeIdRoute,
  CoursesDiplomaIdRoute: CoursesDiplomaIdRoute,
  CoursesDegreeIndexRoute: CoursesDegreeIndexRoute,
  CoursesDiplomaIndexRoute: CoursesDiplomaIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/achievements",
        "/contactUs",
        "/facilities",
        "/highlights",
        "/researchCenter",
        "/courses/degree/$id",
        "/courses/diploma/$id",
        "/courses/degree/",
        "/courses/diploma/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/achievements": {
      "filePath": "achievements.lazy.tsx"
    },
    "/contactUs": {
      "filePath": "contactUs.lazy.tsx"
    },
    "/facilities": {
      "filePath": "facilities.lazy.tsx"
    },
    "/highlights": {
      "filePath": "highlights.lazy.tsx"
    },
    "/researchCenter": {
      "filePath": "researchCenter.lazy.tsx"
    },
    "/courses/degree/$id": {
      "filePath": "courses/degree/$id.tsx"
    },
    "/courses/diploma/$id": {
      "filePath": "courses/diploma/$id.tsx"
    },
    "/courses/degree/": {
      "filePath": "courses/degree/index.tsx"
    },
    "/courses/diploma/": {
      "filePath": "courses/diploma/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
